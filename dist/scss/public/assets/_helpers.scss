// Margin and Padding

$grid-breakpoints: (xs: 0,
    sm: 576px,
    md: 768px,
    lg: 992px,
    xl: 1200px) !default;

$spacer: 1rem !default;
$spacers: () !default;
// $spacers: map-merge((6: ($spacer * 6), // 96px
//         7: ($spacer * 7), // 112px
//         8: ($spacer * 8), // 128px
//         9: ($spacer * 9), // 144px
//         10: ($spacer * 10) // 160px
//     ),
//     $spacers);
$spacers: map-merge((6: (70px), // 96px
        7: (90px), // 112px
        8: (110px), // 128px
        9: (130px), // 144px
        10: (150px) // 160px
    ),
    $spacers);

@function breakpoint-min($name, $breakpoints: $grid-breakpoints) {
    $min: map-get($breakpoints, $name);
    @return if($min !=0, $min, null);
}

@mixin media-breakpoint-up($name, $breakpoints: $grid-breakpoints) {
    $min: breakpoint-min($name, $breakpoints);

    @if $min {
        @media (min-width: $min) {
            @content;
        }
    }

    @else {
        @content;
    }
}

@function breakpoint-infix($name, $breakpoints: $grid-breakpoints) {
    @return if(breakpoint-min($name, $breakpoints)==null, "", "-#{$name}");
}

@each $breakpoint in map-keys($grid-breakpoints) {
    @include media-breakpoint-up($breakpoint) {
        $infix: breakpoint-infix($breakpoint, $grid-breakpoints);

        @each $prop,
        $abbrev in (margin: m, padding: p) {

            @each $size,
            $length in $spacers {
                .#{$abbrev}#{$infix}-#{$size} {
                    #{$prop}: $length !important;
                }

                .#{$abbrev}t#{$infix}-#{$size},
                .#{$abbrev}y#{$infix}-#{$size} {
                    #{$prop}-top: $length !important;
                }

                .#{$abbrev}r#{$infix}-#{$size},
                .#{$abbrev}x#{$infix}-#{$size} {
                    #{$prop}-right: $length !important;
                }

                .#{$abbrev}b#{$infix}-#{$size},
                .#{$abbrev}y#{$infix}-#{$size} {
                    #{$prop}-bottom: $length !important;
                }

                .#{$abbrev}l#{$infix}-#{$size},
                .#{$abbrev}x#{$infix}-#{$size} {
                    #{$prop}-left: $length !important;
                }
            }
        }

        // Negative margins (e.g., where `.mb-n1` is negative version of `.mb-1`)
        // @each $size,
        // $length in $spacers {
        //     @if $size !=0 {
        //         .m#{$infix}-n#{$size} {
        //             margin: -$length !important;
        //         }

        //         .mt#{$infix}-n#{$size},
        //         .my#{$infix}-n#{$size} {
        //             margin-top: -$length !important;
        //         }

        //         .mr#{$infix}-n#{$size},
        //         .mx#{$infix}-n#{$size} {
        //             margin-right: -$length !important;
        //         }

        //         .mb#{$infix}-n#{$size},
        //         .my#{$infix}-n#{$size} {
        //             margin-bottom: -$length !important;
        //         }

        //         .ml#{$infix}-n#{$size},
        //         .mx#{$infix}-n#{$size} {
        //             margin-left: -$length !important;
        //         }
        //     }
        // }
    }
}

.direction-ltr {
    direction: ltr;
}

.overflow-visible {
    overflow: visible !important;
}

.pos-centering {
    @extend %centering;
}

.pos-centering-absolute {
    @extend %centering-absolute;
}

.rounded-10 {
    border-radius: 10px;
}

.p-img {
    width: 100%;
    height: 100%;
    object-fit: cover;
}

// positions
.pos-top {
    top: 0;
}

.pos-bottom {
    bottom: 0;
}

.pos-right {
    right: 0;
}

.pos-left {
    left: 0;
}

.p-divider {
    border-top: solid 1px #eae7e7;
}

.t-break {
    word-break: break-all;
}

.p-link {
    border: none;
    outline: none;
    background-color: transparent;

    &:focus,
    &:active {
        outline: none;
    }
}

.p-bg-primary {
    background-color: $color-primary;
}

.p-bg-secondary {
    background-color: $color-secondary;
}

.p-bg-danger {
    background-color: $color-danger;
}

.p-bg-warning {
    background-color: $color-warning;
}

.p-bg-success {
    background-color: $color-success;
}

.p-bg-dark {
    background-color: $color-dark;
}

.p-bg-white {
    background-color: white;
}